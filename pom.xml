<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>bmc.dev.resources.code</groupId>
    <artifactId>bmc-resources-parent</artifactId>
    <version>bmc-local</version>
    <packaging>pom</packaging>

    <name>BMC - BMC Resources Parent</name>
    <description>
        BMC - BOM and Build System Parent for Resources and "non-services" children BOMs. Children BOMs using this project are most likely
        framework-agnostic.
        _
        This is the first and top parent for every general resource / standalone jar / maven plugin project.
        _
        The existence of this project is because the bmc-parent template will contain resources that, if built with itself for alignment, will create
        circular dependencies that are better to avoid.
        _
        The resources created with this Pom as parent will likely be included in the bmc-parent template, try to use that
        template instead of this one where possible to benefit from all its features, that will not be present in this one.
    </description>
    <url>https://www.bmc-anvil.com/</url>

    <properties>
        <!-- Keep properties in alphabetical order  -->
        <!-- Configuration  -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- GitHub Repositories -->
        <github.org>bmc-anvil</github.org>
        <github.scm>scm:git:https://github.com</github.scm>
        <github.packages.id>github</github.packages.id>
        <github.packages.name>GitHub Packages</github.packages.name>
        <github.packages.base-url>https://maven.pkg.github.com</github.packages.base-url>
        <github.repository>${project.groupId}.${project.artifactId}</github.repository>

        <!-- Java / Maven Configuration  -->
        <maven.compiler.parameters>true</maven.compiler.parameters>
        <maven.compiler.release>25</maven.compiler.release>
        <maven.compiler.proc>full</maven.compiler.proc>
        <maven.min.version>3.9.9</maven.min.version>

        <!-- Plugins Versions  -->
        <plugin.checkstyle.version>3.6.0</plugin.checkstyle.version>
        <plugin.jacoco.version>0.8.13</plugin.jacoco.version>
        <plugin.maven.compiler.version>3.14.0</plugin.maven.compiler.version>
        <plugin.maven.deploy.version>3.1.4</plugin.maven.deploy.version>
        <plugin.maven.enforcer.version>3.6.1</plugin.maven.enforcer.version>
        <plugin.maven.jar.version>3.4.2</plugin.maven.jar.version>
        <plugin.maven.javadoc.version>3.11.3</plugin.maven.javadoc.version>
        <plugin.maven.resources.version>3.3.1</plugin.maven.resources.version>
        <plugin.maven.shade.version>3.6.0</plugin.maven.shade.version>
        <plugin.maven.source.version>3.3.1</plugin.maven.source.version>
        <plugin.maven.surefire.version>3.5.4</plugin.maven.surefire.version>

        <!-- Maven Plugins Creation Versions  -->
        <!-- NOTE:
              Maven-plugin-plugin 3.13.1, latest for maven 3.9.9, supports bytecode up to version 67 - jdk 23.
              When updating this plugin, check for dependent projects and update the maven-compiler version accordingly.
         -->
        <maven.core.version>3.9.9</maven.core.version>
        <maven.plugin.api.version>3.9.9</maven.plugin.api.version>
        <maven.plugin.plugin.version>3.13.1</maven.plugin.plugin.version>
        <maven.plugin.tools.plugin.annotations.version>3.13.1</maven.plugin.tools.plugin.annotations.version>

        <!-- Versions -->
        <apache.commons.collections.version>4.5.0</apache.commons.collections.version>
        <apache.commons.lang3.version>3.18.0</apache.commons.lang3.version>
        <checkstyle.version>11.0.1</checkstyle.version>
        <junit.bom.version>5.13.4</junit.bom.version>
        <lombok.version>1.18.42</lombok.version>
        <mockito.bom.version>5.20.0</mockito.bom.version>
    </properties>

    <!-- About Licenses:
         This section may / will change over time as the project grows / shrinks / changes in repositories, resources, assets, etc.
         Not every repository, resource, asset, etc. will use the same licensing approach.
         This means I will change the licensing at my own will over time at any time without notice.
         -
         The idea behind this project is to showcase, learn and share, but without losing control of my own creation.
         -
         Parts of the project anyone will be able to incorporate on closed-source code without sharing your own code nor adopting a copy-left
         license. (Apache License v2 / other?)
         Other parts will be licenced so you can also use them at will but MUST still be FOSS, and you need to reshare your modifications and keep
         the code available. (LGPL v3 / other?)
         Licensing may / will change at any time, with no notice.
    -->
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
        <license>
            <name>GNU Lesser General Public License, Version 3.0</name>
            <url>https://www.gnu.de/documents/lgpl-3.0.en.html</url>
            <distribution>repo</distribution>
        </license>
        <license>
            <name>GNU General Public License, Version 2.0</name>
            <url>https://www.gnu.de/documents/gpl-2.0.en.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Johnny X</name>
            <organization>BareMetalCode</organization>
            <organizationUrl>https://www.baremetalcode.com/</organizationUrl>
        </developer>
        <developer>
            <name>BareMetalCode Devs</name>
            <organization>BareMetalCode</organization>
            <organizationUrl>https://www.baremetalcode.com/</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>${github.scm}/${github.org}/${github.repository}.git</connection>
        <developerConnection>${github.scm}/${github.org}/${github.repository}.git</developerConnection>
        <url>${project.url}</url>
    </scm>

    <dependencyManagement>
        <dependencies>
            <!-- BOMS -->
            <!-- Test dependencies -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-bom</artifactId>
                <version>${mockito.bom.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.bom.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <!-- Libraries -->
            <!-- BuildTime Libraries -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>compile</scope>
            </dependency>

            <!-- Utilities -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${apache.commons.lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${apache.commons.collections.version}</version>
            </dependency>

            <!-- Maven Plugin Creation Dependencies -->
            <!-- The scope for must be "provided"-->
            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-core</artifactId>
                <version>${maven.core.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.maven.plugin-tools</groupId>
                <artifactId>maven-plugin-annotations</artifactId>
                <version>${maven.plugin.tools.plugin.annotations.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-plugin-api</artifactId>
                <version>${maven.plugin.api.version}</version>
                <scope>provided</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Apache Maven build Plugins -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${plugin.checkstyle.version}</version>
                    <dependencies>
                        <!-- use latest checkstyle version-->
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${checkstyle.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <configLocation>${project.basedir}/checkstyle.xml</configLocation>
                        <outputFile>${project.build.directory}/checkstyle-result.sarif</outputFile>
                        <outputFileFormat>sarif</outputFileFormat>
                        <excludeGeneratedSources>true</excludeGeneratedSources>
                        <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        <inputEncoding>UTF-8</inputEncoding>
                        <outputEncoding>UTF-8</outputEncoding>
                        <consoleOutput>true</consoleOutput>
                        <linkXRef>false</linkXRef>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${plugin.maven.compiler.version}</version>
                    <!--
                        Java >=23 requires explicit configuration of annotation processing.
                        Add the proper configuration to children of this parent POM.
                    -->
                    <configuration>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${plugin.maven.deploy.version}</version>
                    <configuration>
                        <deployAtEnd>true</deployAtEnd>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${plugin.maven.enforcer.version}</version>
                    <executions>
                        <execution>
                            <id>enforce</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireJavaVendor>
                                        <!-- java -XshowSettings:properties -version 2>&1 | grep vendor -->
                                        <message>To build this project one of the JDK in the "includes" list has to be used</message>
                                        <includes>
                                            <!-- commercial vendors to include: DO NOT include any commercial vendors -->
                                            <!-- open-source vendors to include -->
                                            <include>OpenJDK</include>
                                            <include>openjdk</include>
                                            <include>GraalVM</include>
                                            <!-- need to include Oracle as an OSS vendor given they provide a GNU GPL build of the JDK  -->
                                            <include>Oracle Corporation</include>
                                            <!-- workaround for missing java.vendor property in some OpenJDK builds-->
                                            <include>N/A</include>
                                        </includes>
                                    </requireJavaVendor>
                                    <requireJavaVersion>
                                        <message>To build this project JDK >=${maven.compiler.release} is required. Please install it.</message>
                                        <version>${maven.compiler.release}</version>
                                    </requireJavaVersion>
                                    <requireMavenVersion>
                                        <message>To build this project Maven >=${maven.min.version} is required. Please install it.</message>
                                        <version>${maven.min.version}</version>
                                    </requireMavenVersion>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${plugin.maven.jar.version}</version>
                    <!-- Configuration to allow including .gitignore file into a project's JAR-->
                    <configuration>
                        <addDefaultExcludes>false</addDefaultExcludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${plugin.maven.javadoc.version}</version>
                    <configuration>
                        <release>${maven.compiler.release}</release>
                        <doclint>none</doclint>
                        <additionalJOptions>
                            <additionalJOption>-Xdoclint:none</additionalJOption>
                        </additionalJOptions>
                        <failOnError>false</failOnError>
                        <skip>false</skip>
                    </configuration>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                            <phase>package</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-plugin-plugin</artifactId>
                    <version>${maven.plugin.plugin.version}</version>
                    <configuration>
                        <goalPrefix>${project.artifactId}</goalPrefix>
                    </configuration>
                    <executions>
                        <execution>
                            <id>default-descriptor</id>
                            <goals>
                                <goal>descriptor</goal>
                                <goal>helpmojo</goal>
                            </goals>
                            <phase>process-classes</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${plugin.maven.resources.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${plugin.maven.source.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                            <phase>package</phase>
                        </execution>
                    </executions>
                    <configuration>
                        <attach>true</attach>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${plugin.maven.surefire.version}</version>
                    <configuration>
                        <argLine>
                            -javaagent:"${settings.localRepository}/org/mockito/mockito-core/${mockito.bom.version}/mockito-core-${mockito.bom.version}.jar"=--inline-mock-maker
                        </argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${plugin.jacoco.version}</version>
                    <configuration>
                        <haltOnFailure>false</haltOnFailure>
                        <excludes>
                            <!-- Exclude test classes -->
                            <exclude>**/*Test.*</exclude>
                            <exclude>**/*TestCase.*</exclude>
                            <exclude>**/*IT.*</exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <id>default-prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-report</id>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-check</id>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <!--
                                         There is no BUNDLE aka "overall" rule as we could have methods or entire classes not even tested and still achieve
                                         a given percentage.
                                         What we want is to make sure each class is tested to a certain amount and not that 9 out of 10 classes are tested and
                                         1 remains untested.
                                         That is a no-go.
                                         Overriding this will be flagged by automated tools in ci/cd, and it is ok...
                                         Tricks such as using @Generated / broad exclusions etc. are also flagged.
                                         Using such tricks is probably fine as we may need to be able to circumvent some strict rules in certain cases.
                                         Still... someone has to keep an eye (CI/CD will) that exceptions do not become rule and if they become the case,
                                         reexamine the rules.

                                         The rules below may seem a lot, but the children of this resources-parent are projects targeting the base of
                                         the codebase.
                                         They'll probably become stricter in time.
                                    -->
                                    <!-- Class complexity limit -->
                                    <rule>
                                        <element>CLASS</element>
                                        <limits>
                                            <limit>
                                                <counter>LINE</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>0.90</minimum>
                                            </limit>
                                            <limit>
                                                <counter>BRANCH</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>1.00</minimum>
                                            </limit>
                                        </limits>
                                    </rule>
                                    <!-- Method complexity limit -->
                                    <rule>
                                        <element>METHOD</element>
                                        <limits>
                                            <limit>
                                                <counter>COMPLEXITY</counter>
                                                <value>TOTALCOUNT</value>
                                                <maximum>7</maximum>
                                            </limit>
                                        </limits>
                                    </rule>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <!-- This profile is executed to deploy "libraries" or "modules" with corresponding documentation and sources to a given repository. -->
        <!-- As not every project is a library, this configuration needs not be part of the general configuration. -->
        <profile>
            <id>deployable-jar</id>
            <activation>
                <property>
                    <name>deployable-jar</name>
                </property>
            </activation>
            <properties>
                <maven.source.skip>false</maven.source.skip>
                <maven.javadoc.skip>false</maven.javadoc.skip>
            </properties>
            <distributionManagement>
                <repository>
                    <id>${github.packages.id}</id>
                    <name>${github.packages.name}</name>
                    <url>${github.packages.base-url}/${github.org}/${github.repository}</url>
                </repository>
            </distributionManagement>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
